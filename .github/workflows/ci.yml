name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Backend
        run: dotnet build --no-restore --configuration Release

      - name: Run Backend Tests
        run: dotnet test --no-build --verbosity normal

  build-frontend:
    name: Build and Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('Website/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install npm dependencies
        working-directory: Website
        run: npm ci

      - name: Lint Code
        working-directory: Website
        run: npm run lint

      - name: Type Check
        working-directory: Website
        run: npm run type-check

      - name: Run Frontend Tests with Coverage
        working-directory: Website
        run: npm test -- --coverage --watchAll=false --passWithNoTests

      - name: Build Frontend
        working-directory: Website
        run: npm run build

      - name: Start Frontend Server
        working-directory: Website
        run: |
          npm start &  # Start the server in the background
          SERVER_PID=$!  # Capture the server process ID
          echo "Waiting for the frontend to be up..."
          npx wait-on http://localhost:3000  # Wait until server is up
          echo "Running end-to-end tests..."
          npm run cypress:run
          kill $SERVER_PID  # Kill the server after tests are complete
        env:
          CI: true
